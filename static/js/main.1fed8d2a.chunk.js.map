{"version":3,"sources":["components/TitleBar.jsx","pareto.png","components/PopulationInput.jsx","components/PopulationResult.jsx","components/PopulationCalculator.jsx","App.js","reportWebVitals.js","index.js"],"names":["TitleBar","state","className","class","Component","PopulationInput","for","type","id","onChange","evt","props","onPopulationChange","target","value","src","pareto","style","width","display","PopulationResult","popLevels","_","range","getPopAtLevel","totalPop","level","a","x","fx","Math","round","getPopulationLevels","pop","population","format","Intl","NumberFormat","map","lvl","Fragment","this","PopulationCalculator","handlePopulationChange","setState","App","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAoBeA,E,4MAjBbC,MAAQ,G,uDAEN,OACE,sBAAKC,UAAU,4BAAf,UACE,6DACA,mBAAGC,MAAM,OAAT,sW,GANeC,aCFR,MAA0B,mCCwD1BC,E,uKApDH,IAAD,OACP,OACE,sBAAKH,UAAU,OAAf,UACE,iCACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKC,MAAM,oBAAX,SACE,uBAAOG,IAAI,WAAWH,MAAM,iBAA5B,gCAIF,qBAAKA,MAAM,oBAAX,SACE,uBACEI,KAAK,SACLJ,MAAM,eACNK,GAAG,WACHC,SAAU,SAACC,GAAD,OACR,EAAKC,MAAMC,mBAAmBF,EAAIG,OAAOC,YAI/C,qBAAKX,MAAM,0CAAX,SACE,sBAAKD,UAAU,OAAf,UACE,uBACEK,KAAK,WACLJ,MAAM,wBACNK,GAAG,sBAEL,uBAAOL,MAAM,mBAAmBG,IAAI,oBAApC,sEAMN,sBAAKH,MAAM,aAAX,UACE,uBAAOG,IAAI,mBAAX,gCACA,uBACEC,KAAK,QACLJ,MAAM,qBACNK,GAAG,2BAIT,qBACEO,IAAKC,EACLd,UAAU,UACVe,MAAO,CAAEC,MAAO,IAAKC,QAAS,kB,GA9CVf,a,gBCwCfgB,E,4MAvCbnB,MAAQ,CACNoB,UAAWC,IAAEC,MAAM,K,EAGrBC,cAAgB,SAACC,EAAUC,GACzB,IAAMC,EAAI,IAEJC,EAAIF,EAAQ,EACdG,EAAMF,EAAC,SAFD,EAESA,GAAV,SAAeC,EAAMD,KAASA,EACvC,OAAOG,KAAKC,MAAMN,EAAWI,I,EAG/BG,oBAAsB,WACpB,IAAMC,EAAM,EAAKtB,MAAMuB,YAAc,IAE/BC,EAAS,IAAIC,KAAKC,aAAa,SAASF,OAE9C,OAAO,EAAKlC,MAAMoB,UAAUiB,KAAI,SAACC,GAAD,OAC9B,cAAC,IAAMC,SAAP,UACE,sBAAKtC,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,mBAAiCqC,KACjC,qBAAKrC,UAAU,sBAAf,SACGiC,EAAO,EAAKX,cAAcS,EAAKM,e,uDAQxC,OACE,sBAAKrC,UAAU,0BAAf,UACE,oDACCuC,KAAKT,6B,GAlCiB5B,aCuBhBsC,E,4MApBbzC,MAAQ,CAAEiC,WAAY,K,EAEtBS,uBAAyB,SAACT,GACpBA,EAAa,IACfA,EAAa,GAEf,EAAKU,SAAS,CAAEV,gB,uDAIhB,OACE,gCACE,cAAC,EAAD,CAAiBtB,mBAAoB6B,KAAKE,yBAC1C,uBACA,cAAC,EAAD,CAAkBT,WAAYO,KAAKxC,MAAMiC,oB,GAfd9B,aCWpByC,MAXf,WACE,OACE,cAAC,IAAML,SAAP,UACE,uBAAMM,KAAK,OAAO5C,UAAU,YAA5B,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCEO6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1fed8d2a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass TitleBar extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"bg-white py-5 text-center\">\r\n        <h2>D&amp;D world population levels</h2>\r\n        <p class=\"lead\">\r\n          The 80/20 principle (power law) applies in many contexts. It is\r\n          reasonable to expect that in the world of D&amp;D, the distribution of\r\n          character levels in the world population should follow a power law\r\n          probability distribution. This utility can tell you how many level 20\r\n          (etc.) characters should inhabit the world (other than your players).\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TitleBar;\r\n","export default __webpack_public_path__ + \"static/media/pareto.76326019.png\";","import React, { Component } from \"react\";\r\nimport pareto from \"../pareto.png\";\r\n\r\nclass PopulationInput extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"py-2\">\r\n        <form>\r\n          <div className=\"form-group row\">\r\n            <div class=\"col-lg-2 col-md-3\">\r\n              <label for=\"worldPop\" class=\"col-form-label\">\r\n                World population\r\n              </label>\r\n            </div>\r\n            <div class=\"col-lg-4 col-md-6\">\r\n              <input\r\n                type=\"number\"\r\n                class=\"form-control\"\r\n                id=\"worldPop\"\r\n                onChange={(evt) =>\r\n                  this.props.onPopulationChange(evt.target.value)\r\n                }\r\n              />\r\n            </div>\r\n            <div class=\"form-group form-check col-lg-6 col-md-3\">\r\n              <div className=\"ml-3\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  class=\"form-check-input my-2\"\r\n                  id=\"commonerBreakdown\"\r\n                />\r\n                <label class=\"form-check-label\" for=\"commonerBreakdown\">\r\n                  Break down commoners into trades and professions\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"powerCurveFactor\">Power curve factor</label>\r\n            <input\r\n              type=\"range\"\r\n              class=\"form-control-range\"\r\n              id=\"powerCurveFactor\"\r\n            />\r\n          </div>\r\n        </form>\r\n        <img\r\n          src={pareto}\r\n          className=\"mx-auto\"\r\n          style={{ width: 300, display: \"block\" }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PopulationInput;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass PopulationResult extends Component {\r\n  state = {\r\n    popLevels: _.range(21),\r\n  };\r\n\r\n  getPopAtLevel = (totalPop, level) => {\r\n    const a = 1.3;\r\n    const m = 1;\r\n    const x = level + 1;\r\n    let fx = (a * m ** a) / x ** (a + 1) / a;\r\n    return Math.round(totalPop * fx);\r\n  };\r\n\r\n  getPopulationLevels = () => {\r\n    const pop = this.props.population || 1000000;\r\n\r\n    const format = new Intl.NumberFormat(\"en-GB\").format;\r\n\r\n    return this.state.popLevels.map((lvl) => (\r\n      <React.Fragment>\r\n        <div className=\"row mb-3 m-1\">\r\n          <div className=\"col-md-3\">Level {lvl}</div>\r\n          <div className=\"col-md-2 text-right\">\r\n            {format(this.getPopAtLevel(pop, lvl))}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"min-vh-100 bg-light p-2\">\r\n        <h4>Population results</h4>\r\n        {this.getPopulationLevels()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PopulationResult;\r\n","import React, { Component } from \"react\";\r\n\r\nimport PopulationInput from \"./PopulationInput\";\r\nimport PopulationResult from \"./PopulationResult\";\r\n\r\nclass PopulationCalculator extends Component {\r\n  state = { population: 1000000 };\r\n\r\n  handlePopulationChange = (population) => {\r\n    if (population < 1) {\r\n      population = 1;\r\n    }\r\n    this.setState({ population });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <PopulationInput onPopulationChange={this.handlePopulationChange} />\r\n        <hr />\r\n        <PopulationResult population={this.state.population} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PopulationCalculator;\r\n","import \"./App.css\";\r\nimport TitleBar from \"./components/TitleBar\";\r\nimport PopulationCalculator from \"./components/PopulationCalculator\";\r\nimport React from \"react\";\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <main role=\"main\" className=\"container\">\r\n        <TitleBar />\r\n        <PopulationCalculator />\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}